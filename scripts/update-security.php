#!/usr/bin/env php
<?php
/**
 * Script de atualiza√ß√£o autom√°tica para aplicar sistema de prote√ß√£o de rotas
 */

echo "=== Atualizador de Seguran√ßa do Produtivus ===\n\n";

$baseDir = __DIR__ . '/../';
$protectedPages = [
    'dashboard.html',
    'tarefas.html',
    'calendario.html',
    'estudos.html',
    'cadernos.html',
    'planilhas.html',
    'mapas.html',
    'subjects.html'
];

$scriptsToAdd = [
    'js/modules/error-handler.js',
    'js/modules/route-guard.js'
];

function addScriptsToPage($filePath, $scriptsToAdd) {
    if (!file_exists($filePath)) {
        echo "‚ö†Ô∏è  Arquivo n√£o encontrado: $filePath\n";
        return false;
    }

    $content = file_get_contents($filePath);
    $modified = false;

    foreach ($scriptsToAdd as $script) {
        // Verifica se o script j√° est√° inclu√≠do
        if (strpos($content, $script) === false) {
            // Procura por uma tag script existente para inserir antes
            $protectJsPattern = '/(<script[^>]*src=["\']js\/protect\.js[^>]*><\/script>)/';

            if (preg_match($protectJsPattern, $content)) {
                // Insere antes do protect.js
                $newScript = "  <script src=\"$script\" defer></script>\n";
                $content = preg_replace($protectJsPattern, $newScript . '$1', $content);
                $modified = true;
                echo "  ‚úì Adicionado $script\n";
            } else {
                // Se n√£o encontrar protect.js, procura por outras tags script
                $lastScriptPattern = '/(<script[^>]*src=[^>]*><\/script>)(?!.*<script[^>]*src=)/s';

                if (preg_match($lastScriptPattern, $content)) {
                    $newScript = "  <script src=\"$script\" defer></script>";
                    $content = preg_replace($lastScriptPattern, '$1' . "\n" . $newScript, $content);
                    $modified = true;
                    echo "  ‚úì Adicionado $script (fallback)\n";
                }
            }
        } else {
            echo "  ‚ÑπÔ∏è  $script j√° inclu√≠do\n";
        }
    }

    if ($modified) {
        file_put_contents($filePath, $content);
        return true;
    }

    return false;
}

function updatePageVersions($filePath) {
    if (!file_exists($filePath)) {
        return false;
    }

    $content = file_get_contents($filePath);
    $currentDate = date('YmdHi');

    // Atualiza vers√µes dos scripts de prote√ß√£o
    $patterns = [
        '/(\?v=)[0-9]{12}/' => '${1}' . $currentDate,
        '/(js\/modules\/error-handler\.js)/' => '${1}?v=' . $currentDate,
        '/(js\/modules\/route-guard\.js)/' => '${1}?v=' . $currentDate,
        '/(js\/protect\.js)/' => '${1}?v=' . $currentDate
    ];

    $modified = false;
    foreach ($patterns as $pattern => $replacement) {
        if (preg_match($pattern, $content)) {
            $content = preg_replace($pattern, $replacement, $content);
            $modified = true;
        }
    }

    if ($modified) {
        file_put_contents($filePath, $content);
        return true;
    }

    return false;
}

// Aplica atualiza√ß√µes √†s p√°ginas protegidas
echo "Atualizando p√°ginas protegidas...\n";
foreach ($protectedPages as $page) {
    $filePath = $baseDir . $page;
    echo "\nüìÑ Processando $page:\n";

    $scriptsAdded = addScriptsToPage($filePath, $scriptsToAdd);
    $versionsUpdated = updatePageVersions($filePath);

    if ($scriptsAdded || $versionsUpdated) {
        echo "  ‚úÖ P√°gina atualizada com sucesso!\n";
    } else {
        echo "  ‚ÑπÔ∏è  Nenhuma altera√ß√£o necess√°ria\n";
    }
}

// Verifica se todas as p√°ginas t√™m protect.js
echo "\nüîç Verificando cobertura de prote√ß√£o...\n";
foreach ($protectedPages as $page) {
    $filePath = $baseDir . $page;
    if (file_exists($filePath)) {
        $content = file_get_contents($filePath);
        if (strpos($content, 'protect.js') === false) {
            echo "‚ö†Ô∏è  $page n√£o possui protect.js - ATEN√á√ÉO!\n";
        } else {
            echo "‚úÖ $page protegido\n";
        }
    }
}

// Cria arquivo de configura√ß√£o para debug se n√£o existir
$devConfigPath = $baseDir . 'server/config/dev.json';
if (!file_exists($devConfigPath)) {
    echo "\nüîß Criando configura√ß√£o de desenvolvimento...\n";
    $devConfig = [
        'devAuth' => [
            'enabled' => false,
            'force' => false,
            'user' => [
                'id' => 1,
                'name' => 'Dev User',
                'email' => 'dev@produtivus.local'
            ]
        ]
    ];

    $configDir = dirname($devConfigPath);
    if (!is_dir($configDir)) {
        mkdir($configDir, 0755, true);
    }

    file_put_contents($devConfigPath, json_encode($devConfig, JSON_PRETTY_PRINT));
    echo "‚úÖ Configura√ß√£o de desenvolvimento criada: $devConfigPath\n";
}

echo "\n=== Atualiza√ß√£o Conclu√≠da ===\n";
echo "üõ°Ô∏è  Sistema de prote√ß√£o de rotas aprimorado!\n";
echo "üîÑ Verifica√ß√£o cont√≠nua de sess√£o ativada\n";
echo "üìä Logs de seguran√ßa habilitados\n";
echo "‚ö° Redirecionamento autom√°tico para login implementado\n\n";

echo "‚ö†Ô∏è  IMPORTANTE:\n";
echo "- Teste o sistema em desenvolvimento antes de usar em produ√ß√£o\n";
echo "- Configure as vari√°veis de ambiente (.env) adequadamente\n";
echo "- Monitore os logs em logs/unauthorized_access.log e logs/logout.log\n";
echo "- Ajuste os intervalos de verifica√ß√£o conforme necess√°rio\n\n";

echo "üéâ Sistema de seguran√ßa atualizado com sucesso!\n";
